import com.google.common.collect.Sets;
import java.util.Set;

public class aju
{
  private static final Set<ajt> dg;
  public static final ajt a;
  public static final ajt b;
  public static final alv c;
  public static final ajt d;
  public static final ajt e;
  public static final ajt f;
  public static final ajt g;
  public static final ajt h;
  public static final akz i;
  public static final aov j;
  public static final akz k;
  public static final aov l;
  public static final aof m;
  public static final ajt n;
  public static final ajt o;
  public static final ajt p;
  public static final ajt q;
  public static final ajt r;
  public static final ajt s;
  public static final aml t;
  public static final aml u;
  public static final ajt v;
  public static final ajt w;
  public static final ajt x;
  public static final ajt y;
  public static final ajt z;
  public static final ajt A;
  public static final ajt B;
  public static final ajt C;
  public static final ajt D;
  public static final ajt E;
  public static final aqu F;
  public static final ajt G;
  public static final apc H;
  public static final akp I;
  public static final aqu J;
  public static final aqv K;
  public static final ajt L;
  public static final aqw M;
  public static final alm N;
  public static final alm O;
  public static final ajy P;
  public static final ajy Q;
  public static final ajt R;
  public static final ajt S;
  public static final alz T;
  public static final alz U;
  public static final ajt V;
  public static final ajt W;
  public static final ajt X;
  public static final ajt Y;
  public static final ajt Z;
  public static final ajt aa;
  public static final all ab;
  public static final ajt ac;
  public static final ajt ad;
  public static final ake ae;
  public static final anx af;
  public static final ajt ag;
  public static final ajt ah;
  public static final ajt ai;
  public static final ajt aj;
  public static final ajt ak;
  public static final ajt al;
  public static final ajt am;
  public static final ajt an;
  public static final ajt ao;
  public static final ajt ap;
  public static final ajt aq;
  public static final ajt ar;
  public static final ajt as;
  public static final ajt at;
  public static final ajt au;
  public static final ajt av;
  public static final ajt aw;
  public static final ajt ax;
  public static final ajt ay;
  public static final ajt az;
  public static final ajt aA;
  public static final ajt aB;
  public static final ajt aC;
  public static final ajt aD;
  public static final ajt aE;
  public static final ajt aF;
  public static final ajt aG;
  public static final ajt aH;
  public static final ajt aI;
  public static final ajt aJ;
  public static final aka aK;
  public static final ajt aL;
  public static final aoa aM;
  public static final ajt aN;
  public static final ajt aO;
  public static final ajt aP;
  public static final ajt aQ;
  public static final ajt aR;
  public static final ajt aS;
  public static final ajt aT;
  public static final ajt aU;
  public static final ajt aV;
  public static final ajt aW;
  public static final ajt aX;
  public static final ank aY;
  public static final ajt aZ;
  public static final ajt ba;
  public static final aoc bb;
  public static final aoc bc;
  public static final ajt bd;
  public static final ajt be;
  public static final ajt bf;
  public static final ajt bg;
  public static final ajt bh;
  public static final ajt bi;
  public static final ajt bj;
  public static final ajt bk;
  public static final ajt bl;
  public static final ajt bm;
  public static final ajt bn;
  public static final ajt bo;
  public static final ajt bp;
  public static final ajt bq;
  public static final ajt br;
  public static final ajt bs;
  public static final ajt bt;
  public static final ajt bu;
  public static final ajt bv;
  public static final amv bw;
  public static final ajt bx;
  public static final ajt by;
  public static final ajt bz;
  public static final ajt bA;
  public static final ajt bB;
  public static final ajt bC;
  public static final ajt bD;
  public static final akd bE;
  public static final ajt bF;
  public static final ajt bG;
  public static final ajt bH;
  public static final ajt bI;
  public static final ajt bJ;
  public static final ajt bK;
  public static final alz bL;
  public static final alz bM;
  public static final ajt bN;
  public static final ajt bO;
  public static final ajt bP;
  public static final ajt bQ;
  public static final api bR;
  public static final ajt bS;
  public static final ajt bT;
  public static final ajt bU;
  public static final ajt bV;
  public static final ajt bW;
  public static final ajt bX;
  public static final ajq bY;
  public static final ajt bZ;
  public static final ajt ca;
  public static final ajt cb;
  public static final ajt cc;
  public static final ajt cd;
  public static final aok ce;
  public static final ajt cf;
  public static final ajt cg;
  public static final ajt ch;
  public static final ajt ci;
  public static final akl cj;
  public static final akl ck;
  public static final ako cl;
  public static final ako cm;
  public static final ajt cn;
  public static final ajt co;
  public static final amf cp;
  public static final ajt cq;
  public static final ajt cr;
  public static final ajt cs;
  public static final ajt ct;
  public static final ajt cu;
  public static final ajt cv;
  public static final ajt cw;
  public static final ajt cx;
  public static final ajt cy;
  public static final ajt cz;
  public static final ajt cA;
  public static final ajt cB;
  public static final ajt cC;
  public static final ajt cD;
  public static final ajt cE;
  public static final akw cF;
  public static final aor cG;
  public static final aos cH;
  public static final ajt cI;
  public static final ajt cJ;
  public static final ajt cK;
  public static final ajt cL;
  public static final ajt cM;
  public static final ajt cN;
  public static final alz cO;
  public static final alz cP;
  public static final ajt cQ;
  public static final ajt cR;
  public static final ajt cS;
  public static final ajt cT;
  public static final ajt cU;
  public static final ajt cV;
  public static final alz cW;
  public static final alz cX;
  public static final ajt cY;
  public static final ajt cZ;
  public static final ajt da;
  public static final ajt db;
  public static final ajt dc;
  public static final ajt dd;
  public static final ajt de;
  public static final ajt df;
  
  private static ajt a(String ☃)
  {
    ajt ☃ = (ajt)ajt.h.c(new kk(☃));
    if (!dg.add(☃)) {
      throw new IllegalStateException("Invalid Block requested: " + ☃);
    }
    return ☃;
  }
  
  static
  {
    if (!kn.a()) {
      throw new RuntimeException("Accessed Blocks before Bootstrap!");
    }
    dg = Sets.newHashSet();
    
    a = a("air");
    b = a("stone");
    c = (alv)a("grass");
    d = a("dirt");
    e = a("cobblestone");
    f = a("planks");
    g = a("sapling");
    h = a("bedrock");
    i = (akz)a("flowing_water");
    j = (aov)a("water");
    k = (akz)a("flowing_lava");
    l = (aov)a("lava");
    m = (aof)a("sand");
    n = a("gravel");
    o = a("gold_ore");
    p = a("iron_ore");
    q = a("coal_ore");
    r = a("log");
    s = a("log2");
    t = (aml)a("leaves");
    u = (aml)a("leaves2");
    v = a("sponge");
    w = a("glass");
    x = a("lapis_ore");
    y = a("lapis_block");
    z = a("dispenser");
    A = a("sandstone");
    B = a("noteblock");
    C = a("bed");
    D = a("golden_rail");
    E = a("detector_rail");
    F = (aqu)a("sticky_piston");
    G = a("web");
    H = (apc)a("tallgrass");
    I = (akp)a("deadbush");
    J = (aqu)a("piston");
    K = (aqv)a("piston_head");
    L = a("wool");
    M = (aqw)a("piston_extension");
    N = (alm)a("yellow_flower");
    O = (alm)a("red_flower");
    P = (ajy)a("brown_mushroom");
    Q = (ajy)a("red_mushroom");
    R = a("gold_block");
    S = a("iron_block");
    T = (alz)a("double_stone_slab");
    U = (alz)a("stone_slab");
    V = a("brick_block");
    W = a("tnt");
    X = a("bookshelf");
    Y = a("mossy_cobblestone");
    Z = a("obsidian");
    aa = a("torch");
    ab = (all)a("fire");
    ac = a("mob_spawner");
    ad = a("oak_stairs");
    ae = (ake)a("chest");
    af = (anx)a("redstone_wire");
    ag = a("diamond_ore");
    ah = a("diamond_block");
    ai = a("crafting_table");
    aj = a("wheat");
    ak = a("farmland");
    al = a("furnace");
    am = a("lit_furnace");
    an = a("standing_sign");
    ao = a("wooden_door");
    ap = a("spruce_door");
    aq = a("birch_door");
    ar = a("jungle_door");
    as = a("acacia_door");
    at = a("dark_oak_door");
    au = a("ladder");
    av = a("rail");
    aw = a("stone_stairs");
    ax = a("wall_sign");
    ay = a("lever");
    az = a("stone_pressure_plate");
    aA = a("iron_door");
    aB = a("wooden_pressure_plate");
    aC = a("redstone_ore");
    aD = a("lit_redstone_ore");
    aE = a("unlit_redstone_torch");
    aF = a("redstone_torch");
    aG = a("stone_button");
    aH = a("snow_layer");
    aI = a("ice");
    aJ = a("snow");
    aK = (aka)a("cactus");
    aL = a("clay");
    aM = (aoa)a("reeds");
    aN = a("jukebox");
    aO = a("fence");
    aP = a("spruce_fence");
    aQ = a("birch_fence");
    aR = a("jungle_fence");
    aS = a("dark_oak_fence");
    aT = a("acacia_fence");
    aU = a("pumpkin");
    aV = a("netherrack");
    aW = a("soul_sand");
    aX = a("glowstone");
    aY = (ank)a("portal");
    aZ = a("lit_pumpkin");
    ba = a("cake");
    bb = (aoc)a("unpowered_repeater");
    bc = (aoc)a("powered_repeater");
    bd = a("trapdoor");
    be = a("monster_egg");
    bf = a("stonebrick");
    bg = a("brown_mushroom_block");
    bh = a("red_mushroom_block");
    bi = a("iron_bars");
    bj = a("glass_pane");
    bk = a("melon_block");
    bl = a("pumpkin_stem");
    bm = a("melon_stem");
    bn = a("vine");
    bo = a("fence_gate");
    bp = a("spruce_fence_gate");
    bq = a("birch_fence_gate");
    br = a("jungle_fence_gate");
    bs = a("dark_oak_fence_gate");
    bt = a("acacia_fence_gate");
    bu = a("brick_stairs");
    bv = a("stone_brick_stairs");
    bw = (amv)a("mycelium");
    bx = a("waterlily");
    by = a("nether_brick");
    bz = a("nether_brick_fence");
    bA = a("nether_brick_stairs");
    bB = a("nether_wart");
    bC = a("enchanting_table");
    bD = a("brewing_stand");
    bE = (akd)a("cauldron");
    bF = a("end_portal");
    bG = a("end_portal_frame");
    bH = a("end_stone");
    bI = a("dragon_egg");
    bJ = a("redstone_lamp");
    bK = a("lit_redstone_lamp");
    bL = (alz)a("double_wooden_slab");
    bM = (alz)a("wooden_slab");
    bN = a("cocoa");
    bO = a("sandstone_stairs");
    bP = a("emerald_ore");
    bQ = a("ender_chest");
    bR = (api)a("tripwire_hook");
    bS = a("tripwire");
    bT = a("emerald_block");
    bU = a("spruce_stairs");
    bV = a("birch_stairs");
    bW = a("jungle_stairs");
    bX = a("command_block");
    bY = (ajq)a("beacon");
    bZ = a("cobblestone_wall");
    ca = a("flower_pot");
    cb = a("carrots");
    cc = a("potatoes");
    cd = a("wooden_button");
    ce = (aok)a("skull");
    cf = a("anvil");
    cg = a("trapped_chest");
    ch = a("light_weighted_pressure_plate");
    ci = a("heavy_weighted_pressure_plate");
    cj = (akl)a("unpowered_comparator");
    ck = (akl)a("powered_comparator");
    cl = (ako)a("daylight_detector");
    cm = (ako)a("daylight_detector_inverted");
    cn = a("redstone_block");
    co = a("quartz_ore");
    cp = (amf)a("hopper");
    cq = a("quartz_block");
    cr = a("quartz_stairs");
    cs = a("activator_rail");
    ct = a("dropper");
    cu = a("stained_hardened_clay");
    cv = a("barrier");
    cw = a("iron_trapdoor");
    cx = a("hay_block");
    cy = a("carpet");
    cz = a("hardened_clay");
    cA = a("coal_block");
    cB = a("packed_ice");
    cC = a("acacia_stairs");
    cD = a("dark_oak_stairs");
    cE = a("slime");
    cF = (akw)a("double_plant");
    cG = (aor)a("stained_glass");
    cH = (aos)a("stained_glass_pane");
    cI = a("prismarine");
    cJ = a("sea_lantern");
    cK = a("standing_banner");
    cL = a("wall_banner");
    cM = a("red_sandstone");
    cN = a("red_sandstone_stairs");
    cO = (alz)a("double_stone_slab2");
    cP = (alz)a("stone_slab2");
    cQ = a("end_rod");
    cR = a("chorus_plant");
    cS = a("chorus_flower");
    cT = a("purpur_block");
    cU = a("purpur_pillar");
    cV = a("purpur_stairs");
    cW = (alz)a("purpur_double_slab");
    cX = (alz)a("purpur_slab");
    cY = a("end_bricks");
    cZ = a("beetroots");
    da = a("grass_path");
    db = a("end_gateway");
    dc = a("repeating_command_block");
    dd = a("chain_command_block");
    de = a("frosted_ice");
    
    df = a("structure_block");
    
    dg.clear();
  }
}
